angular.module("TCModule",["ngMaterial","ngAnimate","ui.router","ngSanitize","angularFileUpload"]).config(["$mdThemingProvider",function(e){e.theme("default").primaryPalette("cyan").accentPalette("blue",{default:"900"}).warnPalette("red")}]),angular.module("TCModule").config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/"),e.state("root",{url:"/",templateUrl:"/templates/index.html"}).state("home",{url:"/home",templateUrl:"/templates/home.html",controller:"UserController"}).state("home.collection",{url:"/collection",templateUrl:"/templates/collection.html",controller:"UserController"}).state("vr",{url:"/vr-collection",templateUrl:"/templates/vr-collection.html",controller:"VrController"}).state("home.play",{url:"/play",templateUrl:"/templates/game.html",controller:"GameController",params:{email:null}}).state("home.playSolo",{url:"/play",templateUrl:"/templates/solo-game.html",controller:"SoloGameController"}).state("home.store",{url:"/store",templateUrl:"/templates/store.html",controller:"StoreController"}).state("home.cms",{url:"/cms",templateUrl:"/templates/cms.html",controller:"CmsController",resolve:{access:["Auth",function(e){return e.isAdmin()}]}}).state("card",{url:"/card/:name",templateUrl:"/templates/card-admin.html",controller:"CardController",resolve:{access:["Auth",function(e){return e.isAdmin()}]}}).state("login",{url:"/login",templateUrl:"/templates/login-test.html"})}]),angular.module("TCModule").controller("AppController",["$scope","$mdSidenav","$http","$location","$mdDialog","Users",function(e,t,o,n,r,a){function l(e,t){e.cancel=function(){t.cancel()}}l.$inject=["$scope","$mdDialog"],e.local={},e.flipped=!1,e.showVrIcon=!1,e.toggleMenu=function(){t("side-menu").toggle()},e.$on("$stateChangeStart",function(t,o,n){"/collection"===o.url?e.showVrIcon=!0:e.showVrIcon=!1}),e.localSignin=function(){o.post("/auth/local",e.local).then(function(){n.path("/home")})},e.showTheDonald=function(e){r.show({controller:l,templateUrl:"../templates/bot-dialog.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!0,fullscreen:!0})}}]),angular.module("TCModule").controller("CardController",["$scope","$stateParams","Cards",function(e,t,o){e.result=[],o.findByName(t.name).then(function(t){e.result[0]=t.data})}]),angular.module("TCModule").controller("CmsController",["$scope","$http","$sce","Cards",function(e,t,o,n){e.card={name:"Harold",unpalatibility:50,up_their_own_arsemanship:50,media_attention:50,legacy:50,ppc:250,special_ability:50,category:"Mouth Breathers",special_ability_description:"Special ability is...",mdBio:"Bio here, markdown compatible...",bio:"Bio here, markdown compatible...",references:["[Wikipedia](https://en.wikipedia.org)"],cuntal_order:"Bronze",images:["preview-front.jpg","preview-rear.jpg"]},e.preview=[e.card],e.showPreviewCard=!0,e.querySearch=function(t){return t?e.names.filter((o=t,function(e){return 0===e.value.indexOf(o)})):e.names;var o},e.selectedItemChange=function(t){if(t){var o=e.cards.find(function(e){return e.name===t.value});e.card=o,e.card.mdBio=e.card.bio,e.preview[0]=e.card,e.calcAverage()}},e.converter=new showdown.Converter,n.all().then(function(t){e.cards=t.data,e.names=e.cards.map(function(e){return{value:e.name,image:e.images[0]}})},function(t){console.log(t),e.cards=null}),e.onSubmit=function(){e.card._id?n.edit(e.card).then(function(t){e.cmsFormResponse="Edit successful"},function(t){console.log(t),e.cmsFormResponse="Error: "+t}):n.create(e.card).then(function(t){e.cmsFormResponse="Card created successfully"},function(t){console.log(t),e.cmsFormResponse="Error: "+t})},e.calcAverage=function(){e.average=(e.card.unpalatibility+e.card.up_their_own_arsemanship+e.card.media_attention+e.card.legacy+e.card.special_ability)/5,e.isTory()},e.isTory=function(){"Tories"===e.card.category?e.card.cuntal_order="Brown Platinum":e.average<60||!e.average?e.card.cuntal_order="Bronze":e.average<75?e.card.cuntal_order="Silver":e.card.cuntal_order="Gold"},e.updateBioMarkdown=function(t){e.card.bio=o.trustAsHtml(e.converter.makeHtml(t))},e.insertMdLink=function(){e.card.mdBio+="[link text...](https://www.google.com)"},e.insertMdItalics=function(){e.card.mdBio+="*italic*"},e.insertMdBold=function(){e.card.mdBio+="**bold**"},e.insertMdNumberedList=function(){e.card.mdBio+="\n1. Item 1\n2. Item 2\n3. Item 3"},e.insertMdBulletedList=function(){e.card.mdBio+="\n- Item 1\n- Item 2\n- Item 3"},e.insertMdBlockquote=function(){e.card.mdBio+='\n> "I have a dream"'},e.calcAverage()}]),angular.module("TCModule").controller("GameController",["$scope","$mdToast","$mdDialog","$interval","$q","$timeout","$state","$stateParams","Cards","socket","Gravatar","Users",function(e,t,o,n,r,a,l,c,s,i,u,d){h.$inject=["$scope","$mdDialog","$filter","Users","stats"];var p=Math.log(200001);function h(e,t,o,r,a){e.stats=a,e.levelUp=!1,e.stats.newXp=a.xp+a.xpWon,e.stats.xpSliderValue=o("xpFilter")(a.xp,a.level);var l=o("xpFilter")(a.xp+a.xpWon,a.level)-o("xpFilter")(a.xp,a.level);n(function(){e.stats.xpSliderValue+=1},100,l,!0).then(function(){o("xpFilter")(a.xp+a.xpWon,a.level)>=100&&(e.levelUp=!0,r.levelUp())}),e.hide=function(){t.hide()}}e.gameId=null,e.collection,e.currentCard,e.host,e.gameInProgress,e.turn,e.onePlayerOption=!1,e.handsWon=0,e.handsDrawn=0,e.handsLost=0,e.round,e.result={myScore:0,opponentScore:0,opponentCard:{},category:""},e.myGravatarUrl,e.opponentGravatarUrl,e.chat={messages:[],sendMessage:""},e.showScore=!1,e.showResult=!1,e.result.scoreSlider=0,e.result.scoreSliderValue=0,e.result.message="",e.myScore=5,e.opponentScore=5,e.init=function(){e.myGravatarUrl=u(c.email,80),i.connect(),i.on("onconnected",function(e){console.log("Connected to TC via socket.io. Player id is "+e)}),i.on("gameCreated",function(t){e.gameId=t,a(function(){e.onePlayerOption=!0},5e3)}),i.on("message",function(t){t.me=!1,e.chat.messages.push(t)}),i.on("status",function(t){var o={message:t,gravatarUrl:"/images/tc-avatar.png"};e.chat.messages.push(o)}),i.on("opponentGravatar",function(t){e.opponentGravatarUrl=t.gravatar}),i.on("start",function(o){e.gameInProgress=!0,e.round=0,i.emit("opponentGravatar",{gravatar:e.myGravatarUrl}),"host"===o?(e.host=!0,e.turn=!0,t.show(t.simple().textContent("Your turn!").position("top").hideDelay(3e3))):(e.host=!1,e.turn=!1),s.getGamePack(5).then(function(t){e.collection=t.data,e.currentCard=[e.collection[e.round]]}).catch(function(e){console.log(e)})}),i.on("victorious",function(t){e.collection.push(t[0]),e.round++,e.turn=!0,e.handsWon++,e.round>e.collection.length-1&&(e.round=0)}),i.on("defeated",function(){e.turn=!1,e.collection.splice(e.round,1),e.handsLost++,e.round>e.collection.length-1&&(e.round=0)}),i.on("draw",function(){e.round++,e.handsDrawn++,e.round>e.collection.length-1&&(e.round=0)}),i.on("opponentScore",function(t){e.result.opponentCard=t.card,e.moveOpponentScoreSlider(t.category,t.score,e.result.myScore).then(function(){e.result.myScore>t.score?(e.myScore++,e.opponentScore--,e.result.message="ðŸŽ‰ So Much Win!"):e.result.myScore<t.score?(e.myScore--,e.opponentScore++,e.result.message="ðŸ’© What A Lose"):e.result.message="ðŸ˜‘ It's a Draw",e.showResult=!0,i.emit("nextRound")})}),i.on("nextRound",function(){a(function(){e.showScore=!1,e.showResult=!1,e.result.scoreSlider=0,e.result.scoreSliderValue=0,e.result.message="",e.hideUnpalatibility=!1,e.hideUpTheirOwnArsemanship=!1,e.hideMediaAttention=!1,e.hideLegacy=!1,e.hidePpc=!1,e.hideSpecialAbility=!1,0===e.collection.length?(i.emit("gameOver"),e.gameLost()):e.currentCard=[e.collection[e.round]]},3e3)}),i.on("play",function(t){e.result.myScore=e.currentCard[0][t.category],e.result.opponentScore=t.score,e.result.opponentCard=t.card,e.result.category=t.category,i.emit("opponentScore",{category:e.result.category,score:e.result.myScore,card:e.currentCard}),e.moveOpponentScoreSlider(e.result.category,e.result.opponentScore,e.result.myScore).then(function(){e.resultCheck()})}),i.on("abort",function(){i.disconnect(),d.updateUsersBoon(JSON.stringify({amount:20})),o.show(o.alert().parent(angular.element(document.body)).clickOutsideToClose(!0).title("Opponent quits!").textContent("ðŸ˜  Most heinous. Your opponent has left the game. Don't worry, we know who he is. Have some compensation (+20 boon)").ariaLabel("Opponent has left the game dialog").ok("Ok")).then(function(){l.go("home")})}),i.on("gameOver",function(){e.gameWon()})},e.send=function(){var t={message:e.chat.sendMessage,gravatarUrl:e.myGravatarUrl,me:!0};e.chat.messages.push(t),i.emit("message",t),e.chat.sendMessage=null},e.play=function(t,o){e.turn&&(e.result.myScore=o,e.result.category=t,i.emit("play",{card:e.currentCard,category:t,score:o}))},e.moveOpponentScoreSlider=function(t,o,a){if(e.showScore=!0,e.totalSliderValue=0,e.maskCategories(t),o>0){if("ppc"===t){var l=Math.round(Math.log(o+1)/p*100,0),c=Math.round(Math.log(a+1)/p*100,0);return r(l>0?function(t,r){n(function(){e.result.scoreSlider+=100/c,e.totalSliderValue+=o/l,e.result.scoreSliderValue=Math.floor(e.totalSliderValue,0)},100,l,!0).then(function(){e.result.scoreSliderValue=o,t()})}:function(e,t){e()})}return r(function(t,r){n(function(){e.result.scoreSlider+=100/a,e.result.scoreSliderValue+=1},100,o,!0).then(function(){t()})})}return r(function(e,t){e()})},e.maskCategories=function(t){e.hideUnpalatibility="unpalatibility"!==t,e.hideUpTheirOwnArsemanship="up_their_own_arsemanship"!==t,e.hideMediaAttention="media_attention"!==t,e.hideLegacy="legacy"!==t,e.hidePpc="ppc"!==t,e.hideSpecialAbility="special_ability"!==t},e.resultCheck=function(){if(e.result.myScore>e.result.opponentScore)e.collection.push(e.result.opponentCard[0]),e.round++,e.turn=!0,e.myScore++,e.opponentScore--,e.result.message="ðŸŽ‰ So Much Win!",e.showResult=!0,e.handsWon++,i.emit("defeated");else if(e.result.myScore<e.result.opponentScore){e.turn=!1,e.myScore--,e.opponentScore++,e.result.message="ðŸ’© What A Lose",e.showResult=!0,e.handsLost++;var t=e.collection.splice(e.round,1);i.emit("victorious",t)}else e.round++,e.result.message="ðŸ˜‘ It's a Draw",e.showResult=!0,e.handsDrawn++,i.emit("draw");e.round>e.collection.length-1&&(e.round=0),i.emit("nextRound")},e.gameWon=function(){d.getUsersStats().then(function(t){o.show({locals:{stats:{level:t.data.level,handsWon:e.handsWon,handsDrawn:e.handsDrawn,handsLost:e.handsLost,xp:t.data.xp,xpWon:5*(e.handsWon+e.handsDrawn+e.handsLost)+25,boon:t.data.boon,boonWon:100}},controller:h,templateUrl:"templates/game-over-won-dialog.html",parent:angular.element(document.body),clickOutsideToClose:!1,fullscreen:!0}).then(function(){var t={won:!0,xp:5*(e.handsWon+e.handsDrawn+e.handsLost)+25,boon:100};d.updateUsersStats(JSON.stringify(t)).then(function(){l.go("home")}).catch(function(e){l.go("home")})})}).catch(function(e){})},e.gameLost=function(){d.getUsersStats().then(function(t){o.show({locals:{stats:{level:t.data.level,handsWon:e.handsWon,handsDrawn:e.handsDrawn,handsLost:e.handsLost,xp:t.data.xp,xpWon:5*(e.handsWon+e.handsDrawn+e.handsLost),boon:t.data.boon,boonWon:25}},controller:h,templateUrl:"templates/game-over-lost-dialog.html",parent:angular.element(document.body),clickOutsideToClose:!1,fullscreen:!0}).then(function(){var t={won:!1,xp:5*(e.handsWon+e.handsDrawn+e.handsLost),boon:25};d.updateUsersStats(JSON.stringify(t)).then(function(){l.go("home")}).catch(function(e){l.go("home")})})}).catch(function(e){})},e.$on("$stateChangeStart",function(t,o){e.gameInProgress?(i.emit("abort"),i.disconnect()):null!==e.gameId&&(console.log("user has cancelled game, or chosen 1 player option"),e.gameId=null,i.disconnect())}),e.init()}]),angular.module("TCModule").controller("SoloGameController",["$scope","$mdToast","$mdDialog","$interval","$q","$state","$timeout","Cards","Users",function(e,t,o,n,r,a,l,c,s){u.$inject=["$scope","$mdDialog","$filter","Users","stats"];var i=Math.log(200001);function u(e,t,o,r,a){e.stats=a,e.levelUp=!1,e.stats.newXp=a.xp+a.xpWon,e.stats.xpSliderValue=o("xpFilter")(a.xp,a.level);var l=o("xpFilter")(a.xp+a.xpWon,a.level)-o("xpFilter")(a.xp,a.level);n(function(){e.stats.xpSliderValue+=1},100,l,!0).then(function(){o("xpFilter")(a.xp+a.xpWon,a.level)>=100&&(e.levelUp=!0,r.levelUp())}),e.hide=function(){t.hide()}}e.collection,e.currentCard,e.opponentPack,e.opponentCard,e.turn=!0,e.round=0,e.opponentRound=0,e.handsWon=0,e.handsDrawn=0,e.handsLost=0,e.showScore=!1,e.showResult=!1,e.result={myScore:0,opponentScore:0,opponentCard:{},category:""},e.result.scoreSlider=0,e.result.scoreSliderValue=0,e.result.message="",e.myScore=5,e.opponentScore=5,e.init=function(){c.getComputerPack(5).then(function(o){console.log("Computer's pack: ",o.data),e.opponentPack=o.data,e.opponentCard=[e.opponentPack[e.opponentRound]],c.getGamePack(5).then(function(o){e.collection=o.data,e.currentCard=[e.collection[e.round]],t.show(t.simple().textContent("Your turn!").position("top").hideDelay(3e3))}).catch(function(e){console.log(e)})}).catch(function(e){console.log(e)})},e.play=function(t,o){if(e.turn){var n=e.opponentCard[0][t];e.result.myScore=o,e.result.opponentScore=n,e.result.opponentCard=e.opponentCard,e.result.category=t,e.moveOpponentScoreSlider(t,n,o).then(function(){e.resultCheck()})}},e.computerPlay=function(t,o){var n=e.currentCard[0][t];e.result.myScore=n,e.result.opponentScore=o,e.result.opponentCard=e.opponentCard,e.result.category=t,e.moveOpponentScoreSlider(t,o,n).then(function(){e.resultCheck()})},e.moveOpponentScoreSlider=function(t,o,a){if(e.showScore=!0,e.totalSliderValue=0,e.maskCategories(t),o>0){if("ppc"===t){var l=Math.round(Math.log(o+1)/i*100,0),c=Math.round(Math.log(a+1)/i*100,0);return r(l>0?function(t,r){n(function(){e.result.scoreSlider+=100/c,e.totalSliderValue+=o/l,e.result.scoreSliderValue=Math.floor(e.totalSliderValue,0)},100,l,!0).then(function(){e.result.scoreSliderValue=o,t()})}:function(e,t){e()})}return r(function(t,r){n(function(){e.result.scoreSlider+=100/a,e.result.scoreSliderValue+=1},100,o,!0).then(function(){t()})})}return r(function(e,t){e()})},e.maskCategories=function(t){e.hideUnpalatibility="unpalatibility"!==t,e.hideUpTheirOwnArsemanship="up_their_own_arsemanship"!==t,e.hideMediaAttention="media_attention"!==t,e.hideLegacy="legacy"!==t,e.hidePpc="ppc"!==t,e.hideSpecialAbility="special_ability"!==t},e.resultCheck=function(){if(e.result.myScore>e.result.opponentScore)e.collection.push(e.result.opponentCard[0]),e.round++,e.turn=!0,e.myScore++,e.opponentScore--,e.result.message="ðŸŽ‰ So Much Win!",e.showResult=!0,e.handsWon++,e.opponentResultNotification("defeated",null);else if(e.result.myScore<e.result.opponentScore){e.turn=!1,e.myScore--,e.opponentScore++,e.result.message="ðŸ’© What A Lose",e.showResult=!0,e.handsLost++;var t=e.collection.splice(e.round,1);e.opponentResultNotification("victorious",t)}else e.round++,e.result.message="ðŸ˜‘ It's a Draw",e.showResult=!0,e.handsDrawn++,e.opponentResultNotification("draw",null);e.round>e.collection.length-1&&(e.round=0),e.nextRound()},e.opponentResultNotification=function(t,o){"defeated"===t?(e.opponentPack.splice(e.opponentRound,1),e.opponentRound>e.opponentPack.length-1&&(e.opponentRound=0)):"victorious"===t?(e.opponentPack.push(o[0]),e.opponentRound++,e.opponentRound>e.opponentPack.length-1&&(e.opponentRound=0)):"draw"===t&&(e.opponentRound++,e.opponentRound>e.opponentPack.length-1&&(e.opponentRound=0))},e.nextRound=function(){l(function(){e.showScore=!1,e.showResult=!1,e.result.scoreSlider=0,e.result.scoreSliderValue=0,e.result.message="",e.hideUnpalatibility=!1,e.hideUpTheirOwnArsemanship=!1,e.hideMediaAttention=!1,e.hideLegacy=!1,e.hidePpc=!1,e.hideSpecialAbility=!1,0===e.collection.length?e.gameLost():0===e.opponentPack.length?e.gameWon():(e.currentCard=[e.collection[e.round]],e.opponentCard=[e.opponentPack[e.opponentRound]],e.turn||l(function(){var t=["unpalatibility","up_their_own_arsemanship","media_attention","legacy","ppc","special_ability"],o=t[Math.floor(Math.random()*t.length)];e.computerPlay(o,e.opponentCard[0][o])},2e3))},3e3)},e.gameWon=function(){s.getUsersStats().then(function(t){o.show({locals:{stats:{level:t.data.level,handsWon:e.handsWon,handsDrawn:e.handsDrawn,handsLost:e.handsLost,xp:t.data.xp,xpWon:5*(e.handsWon+e.handsDrawn+e.handsLost)+25,boon:t.data.boon,boonWon:100}},controller:u,templateUrl:"templates/game-over-won-dialog.html",parent:angular.element(document.body),clickOutsideToClose:!1,fullscreen:!0}).then(function(){var t={won:!0,xp:5*(e.handsWon+e.handsDrawn+e.handsLost)+25,boon:100};s.updateUsersStats(JSON.stringify(t)).then(function(){a.go("home")}).catch(function(e){a.go("home")})})}).catch(function(e){})},e.gameLost=function(){s.getUsersStats().then(function(t){o.show({locals:{stats:{level:t.data.level,handsWon:e.handsWon,handsDrawn:e.handsDrawn,handsLost:e.handsLost,xp:t.data.xp,xpWon:5*(e.handsWon+e.handsDrawn+e.handsLost),boon:t.data.boon,boonWon:25}},controller:u,templateUrl:"templates/game-over-lost-dialog.html",parent:angular.element(document.body),clickOutsideToClose:!1,fullscreen:!0}).then(function(){var t={won:!1,xp:5*(e.handsWon+e.handsDrawn+e.handsLost),boon:25};s.updateUsersStats(JSON.stringify(t)).then(function(){a.go("home")}).catch(function(e){a.go("home")})})}).catch(function(e){})},e.init()}]),angular.module("TCModule").controller("StoreController",["$scope","$mdDialog","Cards","Users",function(e,t,o,n){function r(e,t,o){e.data={pack:o},e.hide=function(){t.hide()},e.cancel=function(){t.cancel()}}r.$inject=["$scope","$mdDialog","newPack"],e.bronzePackPrice=500,e.bronzePremiumPackPrice=750,e.silverPackPrice=1500,e.silverPremiumPackPrice=2e3,e.goldPackPrice=4500,e.goldPremiumPackPrice=5e3,e.showPremium=!1,e.getBoon=function(){n.getUsersStats().then(function(t){e.boon=t.data.boon}).catch(function(t){console.log(t),e.boon="Error retrieving boon"})},e.purchase=function(t){switch(e.purchaseGrade=t,e.purchaseGradeIcon="icons/paper-bag-"+t+".svg",e.purchasePremiumIcon="icons/paper-bag-"+t+"-premium.svg",t){case"bronze":e.purchasePrice=e.bronzePackPrice,e.purchasePremiumPrice=e.bronzePremiumPackPrice;break;case"silver":e.purchasePrice=e.silverPackPrice,e.purchasePremiumPrice=e.silverPremiumPackPrice;break;case"gold":e.purchasePrice=e.goldPackPrice,e.purchasePremiumPrice=e.goldPremiumPackPrice}e.showPremium=!0},e.confirmPurchase=function(n){var a=0;switch(n){case"bronze":a=e.bronzePackPrice;break;case"bronze-premium":a=e.bronzePremiumPackPrice;break;case"silver":a=e.silverPackPrice;break;case"silver-premium":a=e.silverPremiumPackPrice;break;case"gold":a=e.goldPackPrice;break;case"gold-premium":a=e.goldPremiumPackPrice;break;default:a=0}a>e.boon?e.showNotEnoughBoonAlert():o.purchase(n).then(function(n){e.getBoon();var a=n.data.map(function(e){return o.findById(e.cardId).then(function(t){return t.data.got=e.got,t.data}).catch(function(e){})});Promise.all(a).then(function(e){t.show({locals:{newPack:e},controller:r,templateUrl:"templates/new-pack-dialog.html",parent:angular.element(document.body),clickOutsideToClose:!0,fullscreen:!0})})}).catch(function(e){})},e.showNotEnoughBoonAlert=function(){t.show(t.alert().parent(angular.element(document.body)).clickOutsideToClose(!0).title("Not enough boon").textContent("ðŸ’° I know deals, and this is a bad one, real bad. Read The Art of The Deal and get back to me with a better offer.").ariaLabel("Not enough boon to buy the pack dialog").ok("I'm sorry"))},e.getBoon()}]),angular.module("TCModule").controller("UserController",["$scope","$location","$state","$mdDialog","$window","Cards","Gravatar","Users","Auth",function(e,t,o,n,r,a,l,c,s){function i(e,t,o){e.mdDialogData=[o],e.hide=function(){t.hide()},e.cancel=function(){t.cancel()}}function u(e,t){e.hide=function(){t.hide()},e.cancel=function(){t.cancel()}}u.$inject=["$scope","$mdDialog"],i.$inject=["$scope","$mdDialog","card"],e.showWorldLeaders=!1,e.showAttSeekers=!1,e.showWrongNs=!1,e.showSports=!1,e.showMouthBreathers=!1,e.showTories=!1,e.showFictional=!1,e.showOnePercenters=!1,e.showJokers=!1,e.getToken=function(){if(null===s.getToken())c.getToken().then(function(t){s.saveToken(t.data.token);var o=t.data.token.split(".")[1];o=r.atob(o),e.user=JSON.parse(o)},function(e){t.path("/")});else if(s.isTokenValid()){var o=s.getToken().split(".")[1];o=r.atob(o),e.user=JSON.parse(o)}else t.path("/")},e.gravatarUrl=function(e,t){return l(e,t)},e.logout=function(){s.logout(),t.path("/")},e.showTutorial=function(){n.show({controller:u,templateUrl:"templates/tutorial-dialog.html",parent:angular.element(document.body),clickOutsideToClose:!0,fullscreen:!0})},e.getCards=function(){e.categoriesCollected={worldLeaders:0,attSeekers:0,wrongNs:0,sports:0,mouthBreathers:0,tories:0,fictional:0,onePercenters:0,jokers:0,total:0},a.all().then(function(t){a.getCardCollection().then(function(o){t.data.forEach(function(t){if(o.data.filter(function(e){return e.name===t.name}).length>0)switch(t.collected=!0,e.categoriesCollected.total++,t.category){case"World Leaders":e.categoriesCollected.worldLeaders++;break;case"Attention Seekers":e.categoriesCollected.attSeekers++;break;case"Wrong'n":e.categoriesCollected.wrongNs++;break;case"Sports":e.categoriesCollected.sports++;break;case"Mouth Breathers":e.categoriesCollected.mouthBreathers++;break;case"Tories":e.categoriesCollected.tories++;break;case"Fictional":e.categoriesCollected.fictional++;break;case"1%er":e.categoriesCollected.onePercenters++;break;case"Jokers":e.categoriesCollected.jokers++}else t.collected=!1}),e.totalCollection=t.data})})},e.showCard=function(t,o){e.cardClicked=o,n.show({locals:{card:e.cardClicked},controller:i,templateUrl:"templates/card-dialog.html",parent:angular.element(document.body),targetEvent:t,clickOutsideToClose:!0,fullscreen:!0}).then(function(e){},function(){})},e.getToken()}]),angular.module("TCModule").controller("VrController",["$scope","Cards",function(e,t){t.getCardCollection().then(function(t){e.collection=t.data})}]),angular.module("TCModule").directive("tcCard",["$sce",function(e){return{restrict:"E",templateUrl:"/templates/card.html",controller:["$scope",function(t){t.flipped=!1,t.showCategoryInfo=!1,t.displayLink=function(t){var o=(new showdown.Converter).makeHtml(t);return e.trustAsHtml(o)}}],link:function(t,o){var n=new showdown.Converter;t.card.bio=e.trustAsHtml(n.makeHtml(t.card.bio))}}}]),angular.module("TCModule").directive("tcCardNotCollected",function(){return{restrict:"E",templateUrl:"/templates/card-not-collected.html",controller:["$scope",function(e){e.showCategoryInfo=!1}]}}),angular.module("TCModule").directive("filePicker",["FileUploader","Auth",function(e,t){return{restrict:"E",scope:{side:"=",card:"="},templateUrl:"/templates/file-picker.html",controller:["$scope",function(o){o.uploader=new e({queueLimit:1,url:"/images/upload",removeAfterUpload:!0,headers:{Authorization:"Bearer "+t.getToken()}}),o.uploadProgress=0,o.showProgress=!1}],link:function(e,t,o){var n=t.find("button"),r=angular.element(t[0].querySelector("input#fileInput"));n.bind("click",function(){r[0].click()}),r.bind("change",function(o){e.$apply(function(){var n=o.target.files;!n[0]||n[0].name.includes(" ")?(angular.element(t[0].querySelector("#upload-result")).html("Image file name cannot contain spaces"),e.uploader.clearQueue()):(e.uploadProgress=0,angular.element(t[0].querySelector("#upload-result")).html(""),e.card.images[e.side]=n[0].name,e.showProgress=!0,e.uploader.queue[0].formData[0]=n[0],e.uploader.queue[0].upload(),e.uploader.queue[0].onProgress=function(t){e.uploadProgress=t},e.uploader.queue[0].onSuccess=function(e,o,n){angular.element(t[0].querySelector("#upload-result")).html("Upload complete")},e.uploader.queue[0].onError=function(o,n,r){angular.element(t[0].querySelector("#upload-result")).html("Upload error, see log for more details"),console.log("Status: ",n," Response: ",o),e.uploader.clearQueue()})})})}}}]),angular.module("TCModule").directive("tcPack",function(){return{restrict:"E",templateUrl:"/templates/pack.html",scope:{cards:"="},controller:["$scope",function(e){e.currentCounter=0,e.currentCard=[e.cards[e.currentCounter]],e.previousCard=function(){0===e.currentCounter?e.currentCounter=e.cards.length-1:e.currentCounter--,e.currentCard=[e.cards[e.currentCounter]]},e.nextCard=function(){e.currentCounter===e.cards.length-1?e.currentCounter=0:e.currentCounter++,e.currentCard=[e.cards[e.currentCounter]]}}],link:function(e,t){}}}),angular.module("TCModule").directive("tutorial",function(){return{restrict:"E",templateUrl:"/templates/tutorial.html",controller:["$scope","Cards",function(e,t){e.stepOne=!0,e.stepTwo=!1,e.stepThree=!1,e.result=[],t.findByName("The Makers").then(function(t){e.result[0]=t.data}),e.showStep=function(t){switch(t){case 1:e.stepOne=!0,e.stepTwo=!1,e.stepThree=!1;break;case 2:e.stepOne=!1,e.stepTwo=!0,e.stepThree=!1;break;case 3:e.stepOne=!1,e.stepTwo=!1,e.stepThree=!0;break;default:e.stepOne=!0,e.stepTwo=!1,e.stepThree=!1}}}]}}),angular.module("TCModule").factory("Auth",["$http","$window","$q",function(e,t,o){return{saveToken:function(e){t.sessionStorage.setItem("tcToken",e)},getToken:function(){return t.sessionStorage.getItem("tcToken")},logout:function(){e.get("/logout"),t.sessionStorage.removeItem("tcToken")},isTokenValid:function(){var e=this.getToken();if(e){var o=e.split(".")[1];return o=t.atob(o),(o=JSON.parse(o)).exp>Date.now()/1e3}return!1},isAdmin:function(){var e=this.getToken().split(".")[1];return e=t.atob(e),e=JSON.parse(e),o.when("admin"===e.role)}}}]),angular.module("TCModule").factory("Cards",["$http","Auth",function(e,t){return{all:function(){return e.get("/cards",{headers:{Authorization:"Bearer "+t.getToken()}})},findByName:function(o){return e.get("/card/"+o,{headers:{Authorization:"Bearer "+t.getToken()}})},findById:function(o){return e.get("/card/id/"+o,{headers:{Authorization:"Bearer "+t.getToken()}})},getCardCollection:function(){return e.get("/me/collection",{headers:{Authorization:"Bearer "+t.getToken()}})},getGamePack:function(o){return e.get("/me/pack/"+o,{headers:{Authorization:"Bearer "+t.getToken()}})},getComputerPack:function(o){return e.get("/card/pack/"+o,{headers:{Authorization:"Bearer "+t.getToken()}})},purchase:function(o){return e.get("/purchase/"+o,{headers:{Authorization:"Bearer "+t.getToken()}})},edit:function(o){return e.put("/card/edit/",o,{headers:{Authorization:"Bearer "+t.getToken()}})},create:function(o){return e.post("/card/create",o,{headers:{Authorization:"Bearer "+t.getToken()}})}}}]),angular.module("TCModule").factory("Gravatar",function(){return function(e,t){return"https://www.gravatar.com/avatar/"+CryptoJS.MD5(e)+"?size="+t.toString()}}),angular.module("TCModule").factory("socket",["$rootScope",function(e){var t;return{connect:function(){t=io.connect()},disconnect:function(){t.disconnect()},on:function(o,n){t.on(o,function(){var o=arguments;e.$apply(function(){n.apply(t,o)})})},emit:function(o,n,r){t.emit(o,n,function(){var o=arguments;e.$apply(function(){r&&r.apply(t,o)})})}}}]),angular.module("TCModule").factory("Users",["$http","Auth",function(e,t){return{getToken:function(){return e.get("/me/token")},getUsersStats:function(){return e.get("/me/stats",{headers:{Authorization:"Bearer "+t.getToken()}})},updateUsersStats:function(o){return e.put("/me/stats",o,{headers:{Authorization:"Bearer "+t.getToken()}})},levelUp:function(){return e.put("/me/levelup","",{headers:{Authorization:"Bearer "+t.getToken()}})},updateUsersBoon:function(o){return e.put("/me/boon",o,{headers:{Authorization:"Bearer "+t.getToken()}})}}}]),angular.module("TCModule").filter("levelFilter",function(){return function(e){if(isNaN(e))return e;var t;switch(e){case 1:t="Bronze Fictional";break;case 2:t="Silver Fictional";break;case 3:t="Gold Fictional";break;case 4:t="Bronze Mouth Breather";break;case 5:t="Silver Mouth Breather";break;case 6:t="Gold Mouth Breather";break;case 7:t="Bronze Sport";break;case 8:t="Silver Sport";break;case 9:t="Gold Sport";break;case 10:t="Bronze Wrong'n";break;case 11:t="Silver Wrong'n";break;case 12:t="Gold Wrong'n";break;case 13:t="Bronze Attention Seeker";break;case 14:t="Silver Attention Seeker";break;case 15:t="Gold Attention Seeker";break;case 16:t="Bronze World Leader";break;case 17:t="Silver World Leader";break;case 18:t="Gold World Leader";break;case 19:t="Bronze 1%er";break;case 20:t="Silver 1%er";break;case 21:t="Gold 1%er";break;case 22:t="Bronze Tory";break;case 23:t="Silver Tory";break;case 24:t="Gold Tory";break;case 25:t="Brown Platinum Tory";break;case 26:t="Bronze Top Cunt";break;case 27:t="Silver Top Cunt";break;case 28:t="Gold Top Cunt";break;case 29:t="Brown Platinum Cunt";break;default:t="Top Cunt!"}return t}}),angular.module("TCModule").filter("xpFilter",function(){return function(e,t){if(isNaN(t))return 0;if(isNaN(e))return 0;var o=0,n=0;switch(t){case 1:o=0,n=100;break;case 2:o=100,n=220;break;case 3:o=220,n=360;break;case 4:o=360,n=520;break;case 5:o=520,n=700;break;case 6:o=700,n=900;break;case 7:o=900,n=1120;break;case 8:o=1120,n=1360;break;case 9:o=1360,n=1620;break;case 10:o=1620,n=1900;break;case 11:o=1900,n=2200;break;case 12:o=2200,n=2520;break;case 13:o=2520,n=2860;break;case 14:o=2860,n=3220;break;case 15:o=3220,n=3600;break;case 16:o=3600,n=4e3;break;case 17:o=4e3,n=4420;break;case 18:o=4420,n=4860;break;case 19:o=4860,n=5320;break;case 20:o=5320,n=5800;break;case 21:o=5800,n=6300;break;case 22:o=6300,n=6820;break;case 23:o=6820,n=7360;break;case 24:o=7360,n=7920;break;case 25:o=7920,n=8500;break;case 26:o=8500,n=9100;break;case 27:o=9100,n=9720;break;case 28:o=9720,n=10360;break;case 29:o=10360,n=11020;break;default:return 100}return(e-o)/(n-o)*100}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
